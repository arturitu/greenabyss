const defaults = require('lodash.defaults');
const THREE = require('three');
const glslify = require('glslify');
const hotwireUniforms = require('../utils/hotwireUniforms');

var __vertexShader;
function __getVertexShader() {
	if(!__vertexShader) {
		__vertexShader = glslify('./vertex.glsl');
	}
	return __vertexShader;
}

var __fragmentShader;
function __getFragmentShader() {
	if(!__fragmentShader) {
		__fragmentShader = glslify('./fragment.glsl');
	}
	return __fragmentShader;
}

const __defaultParams = {
	color: new THREE.Color(0xff0000),
	opacity: 1
};

function VerticalGradientAlphaMaterial(params) {
	params = defaults(params, __defaultParams);

	var uniforms = {
		color: {type: 'c', value: params.color},
		opacity: {type: 'f', value: params.opacity}
	};
	this.uniforms = uniforms;
	THREE.ShaderMaterial.call(this, {
		vertexShader: __getVertexShader(),
		fragmentShader: __getFragmentShader(),
		transparent: true,
		uniforms: uniforms
	});
}

VerticalGradientAlphaMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);

hotwireUniforms(
	VerticalGradientAlphaMaterial.prototype, 
	[
		'opacity', 
		'color'
	]
);

module.exports = VerticalGradientAlphaMaterial;