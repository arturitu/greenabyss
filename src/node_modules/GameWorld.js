var defaults = require('lodash.defaults');

var TestSphere = require('meshes/TestSphere');

var DynamicTextureManager = require('textures/DynamicTextureManager');

var __defaultParams = {
	totalTestObjects: 10
};

function GameWorld(params) {
	params = defaults(params, __defaultParams);
	if(!params.scene) throw new Error('Missing a threejs scene.');
	var scene = params.scene;

	this.dynamicTextureManager = new DynamicTextureManager({
		renderer: params.renderer
	});

	var material = new THREE.MeshStandardMaterial({
		map: this.dynamicTextureManager.maps.map,
		normalMap: this.dynamicTextureManager.maps.normalMap,
		emissive: 0xffffff,
		emissiveMap: this.dynamicTextureManager.maps.emissiveMap,
		metalnessMap: this.dynamicTextureManager.maps.metalnessMap,
		roughnessMap: this.dynamicTextureManager.maps.roughnessMap,
		// aoMap: this.dynamicTextureManager.maps.aoMap,
		// alphaMap: this.dynamicTextureManager.passes.alphaMap,
		// alphaTest: 0.5,
		// transparent: true,
		// side: THREE.DoubleSide
	});
	var geometries = [];
	var cols = 2;
	var rows = 2;
	var total = cols * rows;
	for (var i = 0; i < total; i++) {
		var row = ~~(i / cols);
		var col = i % cols;
		var geometry = new THREE.SphereGeometry(0.5, 16, 8);
		geometry.faceVertexUvs[0].forEach(function(vertArray) {
			vertArray.forEach(function(vert) {
				// if(vert.touchedUvs) debugger;
				// vert.touchedUvs = true;
				vert.x = vert.x * 0.5 + 0.5 * row;
				vert.y = vert.y * 0.5 + 0.5 * col;
			});
		});
		geometries.push(geometry);
	}
	for (var i = 0; i < params.totalTestObjects; i++) {
		var geometry = geometries[i % 4];
		var testSphere = new TestSphere({
			geometry: geometry,
			material: material
		});
		testSphere.position.set(
			Math.random() * 10 - 5,
			Math.random() * 10 - 5,
			Math.random() * 10 - 5
		);
		scene.add(testSphere);
	}

	var floor = new THREE.Mesh(
		new THREE.BoxGeometry(10, 1, 10),
		material
	);
	floor.position.y = -5;

	scene.add(floor);

	var skyColor = new THREE.Color(0xafbfef);
	var groundColor = new THREE.Color(0x4f3f2f);
	var ambientLight = new THREE.HemisphereLight(skyColor, groundColor);
	scene.add(ambientLight);
	var sunLight = new THREE.DirectionalLight(0xffffaf);
	sunLight.position.set(1, 1, 0);
	scene.add(sunLight);
}

function onEnterFrame() {
	this.dynamicTextureManager.update();
}

GameWorld.prototype = {
	onEnterFrame: onEnterFrame
}

module.exports = GameWorld;