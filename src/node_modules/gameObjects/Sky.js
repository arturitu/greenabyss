var THREE = require('three');
var defaults = require('lodash.defaults');
var SkySampler = require('utils/SkySampler');

var __defaultParams = {
	skyColor: 0xafbfef,
	groundColor: 0x4f3f2f
};


function Sky(params) {
	params = defaults(params, __defaultParams);
	if(!params.scene) throw new Error('Provide a scene');
	if(!params.renderer) throw new Error('Provide a renderer');
	var scene = params.scene;
	var skyColor = new THREE.Color(params.skyColor);
	var groundColor = new THREE.Color(params.groundColor);
	var ambientLight = new THREE.HemisphereLight(skyColor, groundColor);
	skyColor = ambientLight.color;
	groundColor = ambientLight.groundColor;
	scene.add(ambientLight);
	var sunLight = new THREE.DirectionalLight(0xffffaf);
	sunLight.position.set( 0, 100, 100 );
	sunLight.target.position.set( 0, 0, 0 );

	var sky = new THREE.Sky(100);
	sky.uniforms.sunPosition.value = sunLight.position;
	scene.add(sky.mesh);

	var skySampler = new SkySampler({
		renderer: params.renderer,
		sunPosition: sunLight.position
	});

	skySampler.createSample(new THREE.Vector3(100, 100, 100), skyColor);
	skySampler.createSample(sunLight.position, sunLight.color);

	sunLight.castShadow = true;
	scene.add(sunLight);

	this.sunLight = sunLight;
	this.sky = sky;
	this.skySampler = skySampler;
}

Sky.prototype.update = function() {
	var angle = Date.now() * 0.00002 * Math.PI * 2;
	this.sunLight.position.set(
		Math.cos(angle) * 100,
		Math.sin(angle) * 100,
		0
	);
	this.skySampler.update();
}

module.exports = Sky;